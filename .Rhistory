y <- if(x < 3) {
NA
} else {
10
}
y
getwd()
?setwd
dir.exists(getwd())
dir()
?dir
list.files(getwd())
a<-c()
a<-c(a,1)
a<-c(a,2)
a<-c(a,3)
a<-c(a,4)
a<-c(a,4)
b<- 4:8
b
for(c in b)
print(c)
a<-paste(1,".csv")
a
a<-paste(1,".csv",sep = "")
a
a<-file.path(getwd(),"sushil.txt")
a
?read.csv
a<-file.path("C:\Users\ssrivast\Downloads\specdata\specdata\001.csv")
a<-"C:\\Users\\ssrivast\\Downloads\\specdata\\specdata\\001.csv"
a
a<-"C:\\Users\\ssrivast\\Downloads\\specdata\\specdata\\1.csv"
a
read.csv(a)
a<-"C:\\Users\\ssrivast\\Downloads\\specdata\\specdata\\001.csv"
read.csv(a)
b<-"sulfate"
a[b]
b
c<-"Date"
a[c]
a[[c]]
a["Date"]
a[Date]
b<-read.csv(a)
b
b[c]
b$c
d<-list.files("C:\\Users\\ssrivast\\Downloads\\specdata\\specdata")
d
d[4]
?mean
pollutantmean <- function(directory="C:\\Users\\ssrivast\\Downloads\\specdata\\specdata",pollutant,id=1:332)
{
if(!dir.exists(directory))
{
print("Directory path is not valid. Please enter valid directory path")
}
my_mean1<-c()
fileList<-list.files(directory)
for(i in id){
#filename<-paste(i,".csv",sep = "")
#mycsvfile<-file.path(directory,filename)
#filecontent<-read.csv(file = mycsvfile)
filecontent<-read.csv(fileList[i])
fieldcontent<-filecontent[pollutant]
val<-mean(fieldcontent,na.rm = TRUE)
my_mean1<-c(my_mean1,val)
}
acrossmean<-mean(my_mean1,na.rm = TRUE)
acrossmean
}
pollutantmean( pollutant="sulfate", 1:10)
dir.exists("C:\\Users\\ssrivast\\Downloads\\specdata\\specdata")
pollutantmean( pollutant="sulfate",id=1:10)
pollutantmean( pollutant="sulfate",id=1:10)
pollutantmean( pollutant="sulfate",id=1:10)
pollutantmean( pollutant="sulfate",id=1:10)
getwd()
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean( pollutant="sulfate",id=1:10)
source("Program1.R")
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
val<-mean(fieldcontent,na.rm = TRUE)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
source("Program1.R")
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
getwd()
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
View(fieldcontent)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
summary(fieldcontent)
mean(fieldcontent)
mean(fieldcontent,na.rm = TRUE)
mean(fieldcontent,na.rm = FALSE)
mean(numeric(fieldcontent))
mean(numeric(length(fieldcontent)))
mean(as.numeric(length(fieldcontent)))
mean(as.numeric(fieldcontent))
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
source("Program1.R")
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="nitrate",id=1:10)
pollutantmean(directory = "specdata", pollutant="nitrate",id=70:72)
pollutantmean(directory = "specdata", pollutant="nitrate",id=23)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="nitrate",id=70:72)
View(remainder)
source("Program2.R")
pollutantmean(directory = "specdata", pollutant="nitrate",id=70:72)
pollutantmean(directory = "specdata", pollutant="sulfate",id=1:10)
pollutantmean(directory = "specdata", pollutant="nitrate",id=23)
df<-data.frame()
colnames(df)<-c("id","nobs")
colnames(df)<-c("id","no")
df<-data.frame(ncol=2)
colnames(df)<-c("id","no")
df<-data.frame(ncol=3)
colnames(df)<-c("id","no")
df<-data.frame(ncol=3,colnames("id","no"))
source("Program3.R")
complete("specdata", 1)
View(fieldcontent)
source("Program3.R")
complete("specdata", 1)
source("Program3.R")
complete("specdata", 1)
class(filecontent)
complete.cases(filecontent)
filecontent[complete.cases(filecontent)]
complete("specdata", 1)
filecontent[complete.cases(filecontent)]
source("Program3.R")
complete("specdata", 1)
source("Program3.R")
complete("specdata", 1)
filecontent[complete.cases(filecontent),]
source("Program3.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("Program3.R")
complete("specdata", c(2, 4, 8, 10, 12))
?cor
source("Program4.R")
cr <- corr("specdata", 150)
source("Program4.R")
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source("Program4.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
?head
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_list)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
flag_colors
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
mean(iris$Sepal.Length)
tapply(iris$Sepal.Length,iris$Species,mean)
?apply
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
class(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
mtcars
lapply(mtcars$hp,mean)
mean(mtcars$hp)
tapply(mtcars$hp,mtcars$cyl,mean)
209.21429-82.63636
mean(mtcars[mtcars$cyl==8]$hp)
mean(mtcars[cyl==8]$hp)
mean(mtcars[mtcars$cyl == 8]$hp)
mean(mtcars[mtcars$cyl == 8])
mean(mtcars$cyl == 8)
mtcars$cyl == 8
mean(mtcars$hp[mtcars$cyl == 8])
round(mean(mtcars$hp[mtcars$cyl == 4] - mean(mtcars$hp[mtcars$cyl == 8])
round(mean(mtcars$hp[mtcars$cyl == 4] - mean(mtcars$hp[mtcars$cyl == 8])
round(mean(mtcars$hp[mtcars$cyl == 4]) - mean(mtcars$hp[mtcars$cyl == 8]))
round(mean(mtcars$hp[mtcars$cyl == 8]) - mean(mtcars$hp[mtcars$cyl == 4]))
debug(ls)
ls
ls()
Q
Q
source
a
b
c
Q
ls()
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
Q
q
q
:q
Q
undebug(ls)
source(CacheVector.R)
getwd()
source("CacheVector")
source("CacheVector.R")
b
cc
cc$nobs
mean(cc$nobs)
cachemean(cc$mean)
cachemean(cc$nobs)
a<-cc$nobs
cachemean(a)
a
as.vector(a)
cachemean(a)
length(a)
makeVector(a)
cachemean(a)
makeVector(a)
a
b<-makeVector(a)
b
cachemean(b)
mean(a)
b$get()
b$getmean()
b$setmean()
b$set()
source("CacheVector.R")
a
b<-makeVector(a)
b
b$set1()
b$get1()
source("CacheVector.R")
b<-makeVector(a)
b<-makeVector(a)
source("CacheVector.R")
b<-makeVector(a)
b<-makeVector(a)
source("CacheVector.R")
b<-makeVector(a)
source("CacheVector.R")
b<-makeVector(a)
source("CacheVector.R")
b<-makeVector(a)
b$get()
b$getmean()
b$set(c(1,2,3,4))
b$get()
b$setmean(4)
b$setmean()
b$getmean()
?solve
my_mat<-matrix(1:9,3,3)
my_mat
source("Cachematrix.R")
source("cachematrix.R")
source("ProgrammingAssignment2\cachematrix.R")
source("ProgrammingAssignment2/cachematrix.R")
a<-makeCacheMatrix
a$get
a$get()
a<-makeCacheMatrix(my_mat)
a$get()
a$getinverse()
cacheSolve(a)
solve(my_mat)
my_matrix
solve(my_matrix)
matrix(c(1, 3, 2, 4),nrow=2,ncol=2)
a<-matrix(c(1, 3, 2, 4),nrow=2,ncol=2)
solve(a)
a
solve(a)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(makeCacheMatrix(a))
b<-matrix(c(1,2,3, 0,1,4, 5,6,0),nrow=3,ncol=3,byrow=TRUE)
cacheSolve(makeCacheMatrix(b))
cacheSolve(makeCacheMatrix(b))
solve(b)
str(b)
str(a)
b
str(solve)
str(lm)
str(ls)
plot(a,b)
plot(cc,df)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str()
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace = TRUE, prob = c(0.3,.7))
sample(c(0,1),100,replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sample(c(0,1),10,replace = TRUE, prob = c(0.3,0.7))
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(100, size = 100, prob = 0.7)
rbinom(100, size = 1, prob = 0.7)
flips2<-rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm
rnorm(10)
rnorm(10,mean = 100,sd=25)
rpois(5,lambda=10)
replicate(100, rpois(5, 10))
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars$speed,cars$dist)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(cars)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist,ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle" )
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
plot(cars,pch=2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(data=mtcars,formula=mpg~cyl)
boxplot(data=mtcars,formula=(mpg~cyl))
boxplot((mpg~cyl),data=mtcars)
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
